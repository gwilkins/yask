Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: calc_stencil_vector(StencilContext &, int, int, long, long, long)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (calc_stencil_vector(StencilContext &, int, int, long, long, long)) src/stencil_vector_code.hpp(9,1)

===========================================================================

Begin optimization report for: calc_cluster(StencilContext &, int, int, int, int, int, int, int, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (calc_cluster(StencilContext &, int, int, int, int, int, int, int, int, int)) src/stencil_calc.cpp(79,1)

===========================================================================

Begin optimization report for: calc_block(StencilContext &, int, int, int, int, int, int, int, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (calc_block(StencilContext &, int, int, int, int, int, int, int, int, int)) src/stencil_calc.cpp(104,1)

===========================================================================

Begin optimization report for: realv::operator*(const realv *, realv) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (realv::operator*(const realv *, realv) const) src/realv.hpp(177,45)

===========================================================================

Begin optimization report for: realv::operator+(const realv *, realv) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (realv::operator+(const realv *, realv) const) src/realv.hpp(151,45)

===========================================================================

Begin optimization report for: realv::operator-(const realv *, realv) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (realv::operator-(const realv *, realv) const) src/realv.hpp(164,45)

===========================================================================

Begin optimization report for: calc_region(StencilContext &, int, int, int, int, int, int, int, int, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_region(StencilContext &, int, int, int, int, int, int, int, int, int)) [7/26=26.9%] src/stencil_calc.cpp(125,1)
  -> INLINE (MANUAL): (128,45) Grid5d::getData(Grid5d *) (isz = 1) (sz = 7)
  -> INLINE (MANUAL): src/stencil_region_loops.hpp:(73,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
      -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
  -> INLINE (MANUAL): src/stencil_region_loops.hpp:(77,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
      -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
  -> INLINE (MANUAL): src/stencil_region_loops.hpp:(81,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
      -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
  -> INLINE (MANUAL): src/stencil_region_loops.hpp:(85,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
      -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
  -> INLINE (MANUAL): src/stencil_region_loops.hpp:(88,5) calc_block(StencilContext &, int, int, int, int, int, int, int, int, int) (isz = 1841) (sz = 1864)
    -> INLINE (MANUAL): src/stencil_block_loops.hpp:(35,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
        -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
    -> INLINE (MANUAL): src/stencil_block_loops.hpp:(53,22) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
        -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
    -> INLINE (MANUAL): src/stencil_block_loops.hpp:(69,26) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
        -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
    -> INLINE (MANUAL): src/stencil_block_loops.hpp:(89,23) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
        -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
    -> INLINE (MANUAL): src/stencil_block_loops.hpp:(92,3) calc_cluster(StencilContext &, int, int, int, int, int, int, int, int, int) (isz = 1806) (sz = 1829)
      -> INLINE (MANUAL): src/stencil_calc.cpp:(93,5) calc_stencil_vector(StencilContext &, int, int, long, long, long) (isz = 7197) (sz = 7212)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(28,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(33,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(48,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(53,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(58,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(62,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(62,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(63,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(63,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(64,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(64,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(65,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(65,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(66,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(66,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(67,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(67,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(68,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(68,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(69,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(69,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(70,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(70,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(71,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(71,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(72,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(72,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(73,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(73,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(74,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(74,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(75,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(75,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(76,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(76,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(77,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(77,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(82,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(86,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(86,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(87,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(87,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(88,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(88,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(89,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(89,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(90,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(90,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(91,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(91,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(92,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(92,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(93,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(93,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(94,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(94,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(95,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(95,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(96,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(96,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(97,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(97,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(98,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(98,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(99,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(99,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(100,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(100,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(101,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(101,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(106,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(110,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(110,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(111,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(111,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(112,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(112,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(113,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(113,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(114,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(114,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(115,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(115,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(116,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(116,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(117,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(117,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(118,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(118,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(119,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(119,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(120,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(120,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(121,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(121,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(122,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(122,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(123,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(123,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(124,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(124,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(125,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(125,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(130,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(134,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(134,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(135,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(135,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(136,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(136,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(137,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(137,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(138,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(138,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(139,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(139,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(140,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(140,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(141,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(141,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(142,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(142,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(143,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(143,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(144,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(144,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(145,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(145,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(146,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(146,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(147,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(147,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(148,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(148,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(149,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(149,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(154,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(159,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(163,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(163,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(164,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(164,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(165,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(165,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(166,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(166,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(167,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(167,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(168,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(168,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(169,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(169,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(170,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(170,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(171,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(171,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(172,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(172,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(173,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(173,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(174,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(174,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(175,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(175,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(176,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(176,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(177,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(177,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(178,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(178,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(182,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(182,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(183,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(183,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(184,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(184,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(185,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(185,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(186,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(186,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(187,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(187,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(188,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(188,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(189,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(189,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(190,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(190,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(191,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(191,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(192,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(192,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(193,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(193,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(194,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(194,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(195,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(195,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(196,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(196,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(197,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(197,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(201,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(201,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(202,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(202,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(203,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(203,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(204,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(204,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(205,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(205,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(206,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(206,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(207,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(207,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(208,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(208,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(209,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(209,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(210,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(210,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(211,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(211,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(212,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(212,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(213,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(213,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(214,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(214,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(215,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(215,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(216,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(216,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(220,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(220,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(221,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(221,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(222,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(222,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(223,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(223,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(224,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(224,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(225,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(225,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(226,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(226,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(227,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(227,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(228,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(228,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(229,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(229,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(230,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(230,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(231,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(231,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(232,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(232,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(233,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(233,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(234,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(234,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(235,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(235,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(240,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(245,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(249,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(249,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(250,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(250,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(251,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(251,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(252,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(252,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(253,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(253,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(254,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(254,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(255,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(255,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(256,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(256,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(257,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(257,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(258,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(258,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(259,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(259,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(260,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(260,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(261,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(261,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(262,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(262,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(263,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(263,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(264,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(264,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(268,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(268,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(269,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(269,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(270,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(270,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(271,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(271,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(272,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(272,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(273,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(273,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(274,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(274,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(275,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(275,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(276,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(276,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(277,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(277,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(278,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(278,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(279,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(279,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(280,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(280,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(281,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(281,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(282,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(282,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(283,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(283,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(287,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(287,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(288,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(288,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(289,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(289,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(290,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(290,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(291,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(291,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(292,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(292,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(293,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(293,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(294,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(294,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(295,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(295,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(296,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(296,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(297,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(297,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(298,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(298,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(299,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(299,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(300,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(300,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(301,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(301,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(302,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(302,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(306,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(306,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(307,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(307,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(308,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(308,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(309,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(309,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(310,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(310,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(311,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(311,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(312,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(312,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(313,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(313,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(314,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(314,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(315,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(315,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(316,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(316,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(317,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(317,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(318,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(318,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(319,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(319,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(320,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(320,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(321,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(321,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(326,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(331,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(336,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(341,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(346,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(350,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(350,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(351,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(351,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(352,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(352,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(353,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(353,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(354,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(354,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(355,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(355,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(356,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(356,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(357,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(357,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(358,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(358,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(359,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(359,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(360,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(360,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(361,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(361,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(362,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(362,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(363,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(363,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(364,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(364,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(365,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(365,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(370,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(374,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(374,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(375,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(375,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(376,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(376,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(377,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(377,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(378,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(378,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(379,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(379,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(380,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(380,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(381,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(381,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(382,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(382,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(383,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(383,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(384,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(384,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(385,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(385,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(386,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(386,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(387,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(387,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(388,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(388,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(389,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(389,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(394,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(398,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(398,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(399,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(399,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(400,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(400,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(401,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(401,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(402,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(402,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(403,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(403,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(404,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(404,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(405,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(405,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(406,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(406,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(407,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(407,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(408,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(408,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(409,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(409,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(410,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(410,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(411,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(411,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(412,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(412,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(413,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(413,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(418,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(422,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(422,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(423,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(423,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(424,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(424,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(425,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(425,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(426,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(426,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(427,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(427,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(428,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(428,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(429,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(429,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(430,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(430,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(431,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(431,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(432,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(432,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(433,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(433,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(434,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(434,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(435,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(435,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(436,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(436,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(437,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(437,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(442,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(447,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(451,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(451,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(452,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(452,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(453,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(453,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(454,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(454,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(455,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(455,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(456,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(456,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(457,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(457,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(458,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(458,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(459,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(459,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(460,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(460,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(461,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(461,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(462,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(462,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(463,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(463,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(464,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(464,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(465,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(465,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(466,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(466,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(470,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(470,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(471,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(471,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(472,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(472,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(473,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(473,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(474,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(474,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(475,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(475,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(476,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(476,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(477,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(477,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(478,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(478,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(479,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(479,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(480,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(480,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(481,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(481,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(482,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(482,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(483,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(483,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(484,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(484,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(485,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(485,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(489,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(489,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(490,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(490,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(491,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(491,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(492,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(492,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(493,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(493,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(494,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(494,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(495,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(495,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(496,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(496,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(497,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(497,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(498,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(498,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(499,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(499,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(500,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(500,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(501,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(501,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(502,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(502,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(503,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(503,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(504,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(504,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(508,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(508,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(509,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(509,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(510,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(510,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(511,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(511,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(512,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(512,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(513,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(513,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(514,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(514,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(515,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(515,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(516,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(516,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(517,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(517,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(518,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(518,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(519,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(519,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(520,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(520,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(521,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(521,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(522,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(522,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(523,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(523,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(528,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(533,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(537,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(537,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(538,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(538,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(539,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(539,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(540,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(540,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(541,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(541,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(542,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(542,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(543,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(543,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(544,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(544,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(545,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(545,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(546,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(546,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(547,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(547,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(548,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(548,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(549,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(549,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(550,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(550,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(551,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(551,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(552,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(552,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(556,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(556,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(557,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(557,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(558,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(558,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(559,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(559,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(560,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(560,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(561,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(561,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(562,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(562,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(563,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(563,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(564,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(564,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(565,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(565,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(566,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(566,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(567,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(567,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(568,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(568,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(569,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(569,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(570,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(570,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(571,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(571,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(575,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(575,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(576,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(576,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(577,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(577,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(578,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(578,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(579,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(579,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(580,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(580,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(581,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(581,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(582,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(582,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(583,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(583,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(584,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(584,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(585,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(585,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(586,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(586,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(587,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(587,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(588,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(588,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(589,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(589,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(590,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(590,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(594,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(594,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(595,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(595,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(596,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(596,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(597,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(597,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(598,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(598,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(599,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(599,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(600,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(600,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(601,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(601,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(602,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(602,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(603,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(603,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(604,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(604,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(605,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(605,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(606,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(606,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(607,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(607,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(608,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(608,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(609,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(609,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(614,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(619,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
          -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(622,69) Grid3d::readVec(const Grid3d *, long, long, long, int) const (isz = 28) (sz = 43)
          -> INLINE (MANUAL): src/Grid.hpp:(70,43) RealMatrix4321<1L>::readv(const RealMatrix4321<1L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<1L>::getPtr(const RealMatrix4321<1L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
              -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(624,14) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(624,22) realv::operator-(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(167,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(167,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,15) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,32) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,39) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,46) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,54) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,62) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,71) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,71) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,32) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,39) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,47) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,56) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,56) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,67) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,67) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
          -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
        -> INLINE (MANUAL): src/stencil_vector_code.hpp:(635,17) Grid5d::writeVec(Grid5d *, const realv &, int, int, long, long, long, int) (isz = 32) (sz = 51)
          -> INLINE (MANUAL): src/Grid.hpp:(156,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
          -> INLINE (MANUAL): src/Grid.hpp:(157,15) RealMatrix4321<11L>::writev(RealMatrix4321<11L> *, const realv &, int, long, long, long, int) (isz = 33) (sz = 50)
            -> INLINE (MANUAL): src/real_matrix.hpp:(115,20) RealMatrix4321<11L>::getPtr(RealMatrix4321<11L> *, int, long, long, long, bool) (isz = 2) (sz = 19)
              -> INLINE (MANUAL): (81,63) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
            -> INLINE (MANUAL): src/real_matrix.hpp:(117,11) realv::storeTo(const realv *, realv *) const (isz = 25) (sz = 32)
              -> INLINE (MANUAL): src/realv.hpp:(217,31) realv::operator[](realv *, int) (isz = 1) (sz = 9)
    -> INLINE (MANUAL): src/stencil_calc.cpp:(107,45) Grid5d::getData(Grid5d *) (isz = 1) (sz = 7)


    Report from: OpenMP optimizations [openmp]

src/stencil_calc.cpp(140:1-140:1):OMP:__Z11calc_regionR14StencilContextiiiiiiiii:  OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at src/stencil_region_loops.hpp(41,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at src/stencil_block_loops.hpp(27,1) inlined into src/stencil_region_loops.hpp(89,5)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25452: Original Order found to be proper, but by a close margin
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at src/stencil_block_loops.hpp(45,19) inlined into src/stencil_region_loops.hpp(89,5)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at src/stencil_block_loops.hpp(61,2) inlined into src/stencil_region_loops.hpp(89,5)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at src/stencil_block_loops.hpp(80,6) inlined into src/stencil_region_loops.hpp(89,5)
               remark #15542: loop was not vectorized: inner loop was already vectorized

               LOOP BEGIN at src/stencil_vector_code.hpp(114,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec12.r has aligned access
                  remark #15389: vectorization support: reference __1STRUCTVAR.r has unaligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15305: vectorization support: vector length 8
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15451: unmasked unaligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.500 
                  remark #15478: estimated potential speedup: 2.400 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(134,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec14.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 3
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(146,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec14.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(201,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #25045: Fused Loops: ( 201 209 220 228 )

                  remark #15388: vectorization support: reference _vec19.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15388: vectorization support: reference _vec19.r has aligned access   [ src/stencil_vector_code.hpp(209,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(209,8) ]
                  remark #15388: vectorization support: reference _vec20.r has aligned access   [ src/stencil_vector_code.hpp(220,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(220,8) ]
                  remark #15388: vectorization support: reference _vec20.r has aligned access   [ src/stencil_vector_code.hpp(228,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(228,8) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15301: FUSED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 4 
                  remark #15449: unmasked aligned unit stride stores: 4 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 15 
                  remark #15477: vector loop cost: 2.500 
                  remark #15478: estimated potential speedup: 6.000 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(209,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #25046: Loop lost in Fusion 
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(220,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #25046: Loop lost in Fusion 
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(228,8) inlined into src/stencil_region_loops.hpp(89,5)
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(287,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec25.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 3
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(299,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #25045: Fused Loops: ( 299 306 )

                  remark #15388: vectorization support: reference _vec25.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15388: vectorization support: reference _vec26.r has aligned access   [ src/stencil_vector_code.hpp(306,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(306,8) ]
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: FUSED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 2 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 7 
                  remark #15477: vector loop cost: 1.500 
                  remark #15478: estimated potential speedup: 4.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(306,8) inlined into src/stencil_region_loops.hpp(89,5)
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(310,8) inlined into src/stencil_region_loops.hpp(89,5)
               <Peeled loop for vectorization>
                  remark #25436: completely unrolled by 4  
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(310,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec26.r has aligned access
                  remark #15389: vectorization support: reference __1STRUCTVAR.r has unaligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15305: vectorization support: vector length 8
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15451: unmasked unaligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.500 
                  remark #15478: estimated potential speedup: 2.400 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(398,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec36.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(402,8) inlined into src/stencil_region_loops.hpp(89,5)
               <Peeled loop for vectorization>
                  remark #25436: completely unrolled by 4  
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(402,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec36.r has aligned access
                  remark #15389: vectorization support: reference __1STRUCTVAR.r has unaligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15305: vectorization support: vector length 8
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15451: unmasked unaligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.500 
                  remark #15478: estimated potential speedup: 2.400 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(422,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec38.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 3
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(434,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec38.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(489,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #25045: Fused Loops: ( 489 497 508 516 )

                  remark #15388: vectorization support: reference _vec43.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15388: vectorization support: reference _vec43.r has aligned access   [ src/stencil_vector_code.hpp(497,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(497,8) ]
                  remark #15388: vectorization support: reference _vec44.r has aligned access   [ src/stencil_vector_code.hpp(508,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(508,8) ]
                  remark #15388: vectorization support: reference _vec44.r has aligned access   [ src/stencil_vector_code.hpp(516,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(516,8) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15301: FUSED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 4 
                  remark #15449: unmasked aligned unit stride stores: 4 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 15 
                  remark #15477: vector loop cost: 2.500 
                  remark #15478: estimated potential speedup: 6.000 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(497,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #25046: Loop lost in Fusion 
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(508,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #25046: Loop lost in Fusion 
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(516,8) inlined into src/stencil_region_loops.hpp(89,5)
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(575,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec49.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 3
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(587,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #25045: Fused Loops: ( 587 594 )

                  remark #15388: vectorization support: reference _vec49.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15388: vectorization support: reference _vec50.r has aligned access   [ src/stencil_vector_code.hpp(594,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(594,8) ]
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: FUSED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 2 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 7 
                  remark #15477: vector loop cost: 1.500 
                  remark #15478: estimated potential speedup: 4.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(594,8) inlined into src/stencil_region_loops.hpp(89,5)
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(598,8) inlined into src/stencil_region_loops.hpp(89,5)
               <Peeled loop for vectorization>
                  remark #25436: completely unrolled by 4  
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(598,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec50.r has aligned access
                  remark #15389: vectorization support: reference __1STRUCTVAR.r has unaligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15305: vectorization support: vector length 8
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15451: unmasked unaligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.500 
                  remark #15478: estimated potential speedup: 2.400 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference __ZZ19calc_stencil_vectorR14StencilContextiilllE4vec1.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(167,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(167,25) ]
                  remark #15388: vectorization support: reference U1_V.r has aligned access   [ src/realv.hpp(167,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(167,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference Uf_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference Ue_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference Ud_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference Uc_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference Ub_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference Ua_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U14_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U13_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U12_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U11_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U10_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U9_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U19_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U18_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U17_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U16_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U15_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U8_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U1e_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U1d_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U1c_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U1b_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U1a_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U7_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U23_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U22_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U21_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U20_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U1f_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U6_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U28_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U27_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U26_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U25_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U24_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U5_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U2d_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U2c_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U2b_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U2a_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U29_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U4_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U32_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U31_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U30_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U2f_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U2e_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U3_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U2_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U0_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(217,13) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(217,31) ]
                  remark #15388: vectorization support: reference _vec54.r has aligned access   [ src/realv.hpp(217,31) ]
                  remark #15412: vectorization support: streaming store was generated for (unknown)   [ src/realv.hpp(101,16) ]
                  remark #15412: vectorization support: streaming store was generated for (unknown)   [ src/realv.hpp(101,16) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15467: unmasked aligned streaming stores: 2 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(110,8) inlined into src/stencil_region_loops.hpp(89,5)
                  remark #15388: vectorization support: reference _vec12.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(114,8) inlined into src/stencil_region_loops.hpp(89,5)
               <Peeled loop for vectorization>
                  remark #25436: completely unrolled by 4  
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at src/stencil_region_loops.hpp(41,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: calc_steps_opt(StencilContext &, int)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (calc_steps_opt(StencilContext &, int)) [8/26=30.8%] src/stencil_calc.cpp(150,1)
  -> INLINE (MANUAL): (153,45) Grid5d::getData(Grid5d *) (isz = 1) (sz = 7)
  -> EXTERN: (170,5) printf(const char *, ...)
  -> INLINE (MANUAL): src/stencil_outer_loops.hpp:(54,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
      -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
  -> INLINE (MANUAL): src/stencil_outer_loops.hpp:(58,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
      -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
  -> INLINE (MANUAL): src/stencil_outer_loops.hpp:(62,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
      -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
  -> INLINE (MANUAL): src/stencil_outer_loops.hpp:(66,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
    -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
      -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
  -> INLINE: src/stencil_outer_loops.hpp:(69,5) calc_region(StencilContext &, int, int, int, int, int, int, int, int, int) (isz = 147) (sz = 170)
    -> INLINE (MANUAL): src/stencil_calc.cpp:(128,45) Grid5d::getData(Grid5d *) (isz = 1) (sz = 7)
    -> INLINE (MANUAL): src/stencil_region_loops.hpp:(73,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
        -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
    -> INLINE (MANUAL): src/stencil_region_loops.hpp:(77,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
        -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
    -> INLINE (MANUAL): src/stencil_region_loops.hpp:(81,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
        -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
    -> INLINE (MANUAL): src/stencil_region_loops.hpp:(85,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
      -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
        -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
    -> INLINE (MANUAL): src/stencil_region_loops.hpp:(88,5) calc_block(StencilContext &, int, int, int, int, int, int, int, int, int) (isz = 1841) (sz = 1864)
      -> INLINE (MANUAL): src/stencil_block_loops.hpp:(35,25) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
          -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
      -> INLINE (MANUAL): src/stencil_block_loops.hpp:(53,22) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
          -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
      -> INLINE (MANUAL): src/stencil_block_loops.hpp:(69,26) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
          -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
      -> INLINE (MANUAL): src/stencil_block_loops.hpp:(89,23) std::__1::min<int>(const int &, const int &) (isz = 3) (sz = 12)
        -> INLINE (MANUAL): /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm:(2591,12) std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>) (isz = 8) (sz = 19)
          -> INLINE (MANUAL): (2583,18) std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const (isz = 1) (sz = 11)
      -> INLINE (MANUAL): src/stencil_block_loops.hpp:(92,3) calc_cluster(StencilContext &, int, int, int, int, int, int, int, int, int) (isz = 1806) (sz = 1829)
        -> INLINE (MANUAL): src/stencil_calc.cpp:(93,5) calc_stencil_vector(StencilContext &, int, int, long, long, long) (isz = 7197) (sz = 7212)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(28,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(33,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(48,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(53,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(58,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(62,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(62,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(63,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(63,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(64,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(64,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(65,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(65,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(66,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(66,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(67,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(67,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(68,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(68,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(69,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(69,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(70,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(70,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(71,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(71,17) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(72,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(72,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(73,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(73,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(74,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(74,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(75,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(75,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(76,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(76,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(77,7) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(77,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(82,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(86,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(86,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(87,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(87,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(88,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(88,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(89,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(89,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(90,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(90,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(91,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(91,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(92,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(92,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(93,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(93,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(94,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(94,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(95,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(95,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(96,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(96,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(97,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(97,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(98,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(98,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(99,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(99,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(100,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(100,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(101,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(101,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(106,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(110,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(110,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(111,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(111,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(112,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(112,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(113,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(113,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(114,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(114,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(115,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(115,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(116,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(116,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(117,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(117,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(118,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(118,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(119,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(119,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(120,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(120,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(121,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(121,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(122,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(122,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(123,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(123,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(124,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(124,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(125,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(125,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(130,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(134,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(134,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(135,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(135,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(136,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(136,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(137,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(137,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(138,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(138,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(139,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(139,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(140,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(140,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(141,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(141,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(142,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(142,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(143,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(143,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(144,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(144,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(145,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(145,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(146,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(146,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(147,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(147,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(148,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(148,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(149,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(149,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(154,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(159,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(163,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(163,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(164,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(164,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(165,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(165,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(166,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(166,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(167,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(167,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(168,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(168,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(169,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(169,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(170,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(170,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(171,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(171,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(172,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(172,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(173,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(173,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(174,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(174,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(175,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(175,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(176,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(176,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(177,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(177,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(178,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(178,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(182,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(182,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(183,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(183,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(184,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(184,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(185,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(185,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(186,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(186,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(187,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(187,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(188,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(188,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(189,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(189,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(190,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(190,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(191,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(191,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(192,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(192,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(193,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(193,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(194,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(194,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(195,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(195,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(196,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(196,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(197,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(197,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(201,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(201,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(202,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(202,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(203,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(203,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(204,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(204,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(205,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(205,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(206,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(206,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(207,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(207,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(208,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(208,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(209,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(209,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(210,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(210,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(211,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(211,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(212,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(212,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(213,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(213,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(214,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(214,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(215,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(215,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(216,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(216,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(220,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(220,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(221,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(221,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(222,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(222,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(223,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(223,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(224,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(224,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(225,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(225,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(226,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(226,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(227,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(227,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(228,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(228,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(229,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(229,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(230,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(230,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(231,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(231,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(232,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(232,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(233,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(233,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(234,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(234,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(235,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(235,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(240,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(245,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(249,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(249,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(250,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(250,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(251,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(251,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(252,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(252,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(253,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(253,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(254,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(254,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(255,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(255,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(256,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(256,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(257,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(257,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(258,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(258,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(259,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(259,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(260,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(260,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(261,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(261,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(262,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(262,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(263,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(263,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(264,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(264,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(268,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(268,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(269,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(269,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(270,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(270,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(271,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(271,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(272,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(272,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(273,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(273,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(274,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(274,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(275,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(275,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(276,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(276,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(277,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(277,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(278,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(278,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(279,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(279,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(280,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(280,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(281,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(281,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(282,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(282,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(283,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(283,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(287,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(287,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(288,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(288,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(289,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(289,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(290,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(290,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(291,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(291,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(292,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(292,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(293,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(293,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(294,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(294,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(295,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(295,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(296,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(296,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(297,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(297,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(298,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(298,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(299,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(299,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(300,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(300,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(301,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(301,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(302,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(302,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(306,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(306,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(307,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(307,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(308,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(308,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(309,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(309,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(310,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(310,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(311,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(311,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(312,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(312,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(313,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(313,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(314,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(314,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(315,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(315,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(316,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(316,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(317,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(317,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(318,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(318,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(319,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(319,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(320,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(320,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(321,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(321,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(326,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(331,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(336,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(341,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(346,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(350,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(350,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(351,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(351,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(352,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(352,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(353,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(353,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(354,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(354,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(355,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(355,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(356,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(356,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(357,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(357,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(358,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(358,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(359,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(359,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(360,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(360,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(361,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(361,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(362,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(362,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(363,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(363,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(364,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(364,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(365,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(365,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(370,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(374,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(374,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(375,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(375,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(376,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(376,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(377,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(377,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(378,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(378,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(379,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(379,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(380,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(380,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(381,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(381,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(382,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(382,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(383,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(383,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(384,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(384,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(385,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(385,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(386,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(386,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(387,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(387,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(388,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(388,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(389,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(389,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(394,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(398,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(398,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(399,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(399,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(400,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(400,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(401,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(401,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(402,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(402,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(403,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(403,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(404,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(404,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(405,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(405,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(406,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(406,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(407,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(407,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(408,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(408,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(409,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(409,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(410,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(410,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(411,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(411,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(412,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(412,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(413,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(413,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(418,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(422,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(422,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(423,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(423,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(424,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(424,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(425,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(425,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(426,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(426,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(427,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(427,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(428,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(428,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(429,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(429,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(430,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(430,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(431,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(431,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(432,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(432,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(433,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(433,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(434,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(434,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(435,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(435,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(436,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(436,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(437,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(437,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(442,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(447,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(451,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(451,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(452,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(452,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(453,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(453,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(454,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(454,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(455,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(455,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(456,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(456,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(457,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(457,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(458,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(458,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(459,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(459,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(460,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(460,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(461,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(461,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(462,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(462,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(463,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(463,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(464,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(464,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(465,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(465,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(466,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(466,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(470,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(470,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(471,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(471,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(472,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(472,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(473,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(473,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(474,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(474,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(475,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(475,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(476,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(476,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(477,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(477,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(478,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(478,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(479,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(479,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(480,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(480,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(481,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(481,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(482,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(482,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(483,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(483,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(484,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(484,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(485,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(485,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(489,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(489,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(490,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(490,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(491,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(491,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(492,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(492,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(493,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(493,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(494,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(494,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(495,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(495,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(496,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(496,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(497,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(497,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(498,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(498,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(499,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(499,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(500,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(500,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(501,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(501,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(502,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(502,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(503,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(503,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(504,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(504,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(508,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(508,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(509,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(509,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(510,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(510,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(511,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(511,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(512,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(512,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(513,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(513,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(514,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(514,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(515,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(515,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(516,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(516,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(517,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(517,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(518,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(518,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(519,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(519,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(520,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(520,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(521,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(521,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(522,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(522,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(523,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(523,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(528,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(533,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(537,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(537,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(538,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(538,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(539,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(539,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(540,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(540,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(541,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(541,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(542,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(542,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(543,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(543,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(544,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(544,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(545,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(545,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(546,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(546,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(547,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(547,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(548,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(548,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(549,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(549,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(550,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(550,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(551,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(551,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(552,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(552,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(556,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(556,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(557,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(557,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(558,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(558,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(559,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(559,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(560,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(560,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(561,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(561,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(562,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(562,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(563,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(563,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(564,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(564,18) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(565,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(565,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(566,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(566,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(567,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(567,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(568,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(568,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(569,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(569,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(570,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(570,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(571,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(571,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(575,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(575,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(576,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(576,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(577,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(577,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(578,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(578,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(579,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(579,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(580,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(580,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(581,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(581,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(582,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(582,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(583,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(583,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(584,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(584,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(585,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(585,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(586,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(586,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(587,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(587,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(588,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(588,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(589,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(589,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(590,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(590,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(594,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(594,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(595,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(595,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(596,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(596,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(597,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(597,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(598,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(598,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(599,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(599,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(600,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(600,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(601,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(601,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(602,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(602,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(603,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(603,19) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(604,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(604,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(605,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(605,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(606,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(606,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(607,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(607,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(608,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(608,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(609,8) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(609,20) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(614,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(619,7) Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const (isz = 31) (sz = 50)
            -> INLINE (MANUAL): src/Grid.hpp:(150,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(151,43) RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(622,69) Grid3d::readVec(const Grid3d *, long, long, long, int) const (isz = 28) (sz = 43)
            -> INLINE (MANUAL): src/Grid.hpp:(70,43) RealMatrix4321<1L>::readv(const RealMatrix4321<1L> *, int, long, long, long, int) const (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(88,26) RealMatrix4321<1L>::getPtr(const RealMatrix4321<1L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(91,11) realv::loadFrom(realv *, const realv *) (isz = 23) (sz = 30)
                -> INLINE (MANUAL): src/realv.hpp:(205,36) realv::operator[](const realv *, int) const (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(624,14) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(624,22) realv::operator-(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(167,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(167,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,15) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,32) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,39) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,46) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,54) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,62) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,71) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(625,71) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(626,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(627,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,32) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,39) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,47) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,56) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(628,56) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(629,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(630,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(631,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,17) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,25) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,33) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,41) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,49) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,58) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,58) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,67) realv::operator*(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(180,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(180,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(632,67) realv::operator+(const realv *, realv) const (isz = 33) (sz = 42)
            -> INLINE (MANUAL): src/realv.hpp:(154,25) realv::operator[](realv *, int) (isz = 1) (sz = 9)
            -> INLINE (MANUAL): src/realv.hpp:(154,41) realv::operator[](realv *, int) (isz = 1) (sz = 9)
          -> INLINE (MANUAL): src/stencil_vector_code.hpp:(635,17) Grid5d::writeVec(Grid5d *, const realv &, int, int, long, long, long, int) (isz = 32) (sz = 51)
            -> INLINE (MANUAL): src/Grid.hpp:(156,17) Grid5d::getMatIndex(const Grid5d *, int, int) const (isz = 0) (sz = 9)
            -> INLINE (MANUAL): src/Grid.hpp:(157,15) RealMatrix4321<11L>::writev(RealMatrix4321<11L> *, const realv &, int, long, long, long, int) (isz = 33) (sz = 50)
              -> INLINE (MANUAL): src/real_matrix.hpp:(115,20) RealMatrix4321<11L>::getPtr(RealMatrix4321<11L> *, int, long, long, long, bool) (isz = 2) (sz = 19)
                -> INLINE (MANUAL): (81,63) RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const (isz = 14) (sz = 31)
              -> INLINE (MANUAL): src/real_matrix.hpp:(117,11) realv::storeTo(const realv *, realv *) const (isz = 25) (sz = 32)
                -> INLINE (MANUAL): src/realv.hpp:(217,31) realv::operator[](realv *, int) (isz = 1) (sz = 9)
      -> INLINE (MANUAL): src/stencil_calc.cpp:(107,45) Grid5d::getData(Grid5d *) (isz = 1) (sz = 7)


    Report from: OpenMP optimizations [openmp]

src/stencil_calc.cpp(140:1-140:1):OMP:__Z14calc_steps_optR14StencilContexti:  OpenMP DEFINED REGION WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at src/stencil_calc.cpp(173,5)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at src/stencil_outer_loops.hpp(37,1)
      remark #15382: vectorization support: call to function ___kmpc_ok_to_fork cannot be vectorized   [ src/stencil_calc.cpp(140,1) ]
      remark #15382: vectorization support: call to function ___kmpc_fork_call cannot be vectorized   [ src/stencil_calc.cpp(140,1) ]
      remark #15382: vectorization support: call to function ___kmpc_serialized_parallel cannot be vectorized   [ src/stencil_calc.cpp(140,1) ]
      remark #15382: vectorization support: call to function L___Z14calc_steps_optR14StencilContexti_140__par_region0_23. cannot be vectorized   [ src/stencil_calc.cpp(140,1) ]
      remark #15382: vectorization support: call to function ___kmpc_end_serialized_parallel cannot be vectorized   [ src/stencil_calc.cpp(140,1) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between U45_V line 54 and  line 66
      remark #15346: vector dependence: assumed ANTI dependence between  line 66 and U45_V line 54
   LOOP END
LOOP END

LOOP BEGIN at src/stencil_region_loops.hpp(41,3) inlined into src/stencil_outer_loops.hpp(70,5)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at src/stencil_block_loops.hpp(27,1) inlined into src/stencil_outer_loops.hpp(70,5)
      remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
      remark #25452: Original Order found to be proper, but by a close margin
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at src/stencil_block_loops.hpp(45,19) inlined into src/stencil_outer_loops.hpp(70,5)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at src/stencil_block_loops.hpp(61,2) inlined into src/stencil_outer_loops.hpp(70,5)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at src/stencil_block_loops.hpp(80,6) inlined into src/stencil_outer_loops.hpp(70,5)
               remark #15542: loop was not vectorized: inner loop was already vectorized

               LOOP BEGIN at src/stencil_vector_code.hpp(114,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec12.r has aligned access
                  remark #15389: vectorization support: reference __1STRUCTVAR.r has unaligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15305: vectorization support: vector length 8
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15451: unmasked unaligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.500 
                  remark #15478: estimated potential speedup: 2.400 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(134,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec14.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 3
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(146,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec14.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(201,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #25045: Fused Loops: ( 201 209 220 228 )

                  remark #15388: vectorization support: reference _vec19.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15388: vectorization support: reference _vec19.r has aligned access   [ src/stencil_vector_code.hpp(209,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(209,8) ]
                  remark #15388: vectorization support: reference _vec20.r has aligned access   [ src/stencil_vector_code.hpp(220,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(220,8) ]
                  remark #15388: vectorization support: reference _vec20.r has aligned access   [ src/stencil_vector_code.hpp(228,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(228,8) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15301: FUSED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 4 
                  remark #15449: unmasked aligned unit stride stores: 4 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 15 
                  remark #15477: vector loop cost: 2.500 
                  remark #15478: estimated potential speedup: 6.000 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(209,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #25046: Loop lost in Fusion 
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(220,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #25046: Loop lost in Fusion 
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(228,8) inlined into src/stencil_outer_loops.hpp(70,5)
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(287,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec25.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 3
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(299,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #25045: Fused Loops: ( 299 306 )

                  remark #15388: vectorization support: reference _vec25.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15388: vectorization support: reference _vec26.r has aligned access   [ src/stencil_vector_code.hpp(306,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(306,8) ]
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: FUSED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 2 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 7 
                  remark #15477: vector loop cost: 1.500 
                  remark #15478: estimated potential speedup: 4.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(306,8) inlined into src/stencil_outer_loops.hpp(70,5)
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(310,8) inlined into src/stencil_outer_loops.hpp(70,5)
               <Peeled loop for vectorization>
                  remark #25436: completely unrolled by 4  
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(310,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec26.r has aligned access
                  remark #15389: vectorization support: reference __1STRUCTVAR.r has unaligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15305: vectorization support: vector length 8
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15451: unmasked unaligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.500 
                  remark #15478: estimated potential speedup: 2.400 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(398,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec36.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(402,8) inlined into src/stencil_outer_loops.hpp(70,5)
               <Peeled loop for vectorization>
                  remark #25436: completely unrolled by 4  
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(402,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec36.r has aligned access
                  remark #15389: vectorization support: reference __1STRUCTVAR.r has unaligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15305: vectorization support: vector length 8
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15451: unmasked unaligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.500 
                  remark #15478: estimated potential speedup: 2.400 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(422,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec38.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 3
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(434,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec38.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(489,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #25045: Fused Loops: ( 489 497 508 516 )

                  remark #15388: vectorization support: reference _vec43.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15388: vectorization support: reference _vec43.r has aligned access   [ src/stencil_vector_code.hpp(497,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(497,8) ]
                  remark #15388: vectorization support: reference _vec44.r has aligned access   [ src/stencil_vector_code.hpp(508,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(508,8) ]
                  remark #15388: vectorization support: reference _vec44.r has aligned access   [ src/stencil_vector_code.hpp(516,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(516,8) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15301: FUSED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 4 
                  remark #15449: unmasked aligned unit stride stores: 4 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 15 
                  remark #15477: vector loop cost: 2.500 
                  remark #15478: estimated potential speedup: 6.000 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(497,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #25046: Loop lost in Fusion 
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(508,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #25046: Loop lost in Fusion 
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(516,8) inlined into src/stencil_outer_loops.hpp(70,5)
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(575,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec49.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 3
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(587,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #25045: Fused Loops: ( 587 594 )

                  remark #15388: vectorization support: reference _vec49.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15388: vectorization support: reference _vec50.r has aligned access   [ src/stencil_vector_code.hpp(594,8) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/stencil_vector_code.hpp(594,8) ]
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: FUSED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 2 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 7 
                  remark #15477: vector loop cost: 1.500 
                  remark #15478: estimated potential speedup: 4.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(594,8) inlined into src/stencil_outer_loops.hpp(70,5)
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(598,8) inlined into src/stencil_outer_loops.hpp(70,5)
               <Peeled loop for vectorization>
                  remark #25436: completely unrolled by 4  
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(598,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec50.r has aligned access
                  remark #15389: vectorization support: reference __1STRUCTVAR.r has unaligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15305: vectorization support: vector length 8
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15451: unmasked unaligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.500 
                  remark #15478: estimated potential speedup: 2.400 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=1
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference __ZZ19calc_stencil_vectorR14StencilContextiilllE4vec1.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(167,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(167,25) ]
                  remark #15388: vectorization support: reference U1_V.r has aligned access   [ src/realv.hpp(167,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(167,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference Uf_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference Ue_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference Ud_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference Uc_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference Ub_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference Ua_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U14_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U13_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U12_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U11_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U10_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U9_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U19_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U18_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U17_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U16_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U15_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U8_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U1e_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U1d_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U1c_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U1b_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U1a_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U7_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U23_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U22_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U21_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U20_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U1f_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U6_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U28_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U27_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U26_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U25_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U24_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U5_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U2d_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U2c_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U2b_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U2a_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference rhs_19862.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U29_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U4_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U32_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U31_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U30_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U2f_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U2e_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference rhs_19864.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U3_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(180,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference U2_V.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(180,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(154,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _res.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference U0_V.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access   [ src/realv.hpp(154,25) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 2 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 6 
                  remark #15477: vector loop cost: 0.620 
                  remark #15478: estimated potential speedup: 9.600 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(217,13) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(217,31) ]
                  remark #15388: vectorization support: reference _vec54.r has aligned access   [ src/realv.hpp(217,31) ]
                  remark #15412: vectorization support: streaming store was generated for (unknown)   [ src/realv.hpp(101,16) ]
                  remark #15412: vectorization support: streaming store was generated for (unknown)   [ src/realv.hpp(101,16) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15467: unmasked aligned streaming stores: 2 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/realv.hpp(205,9) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _v.r has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15388: vectorization support: reference (unknown) has aligned access   [ src/realv.hpp(205,22) ]
                  remark #15305: vectorization support: vector length 8
                  remark #15427: loop was completely unrolled
                  remark #15399: vectorization support: unroll factor set to 2
                  remark #15301: SIMD LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.370 
                  remark #15478: estimated potential speedup: 10.660 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(110,8) inlined into src/stencil_outer_loops.hpp(70,5)
                  remark #15388: vectorization support: reference _vec12.r has aligned access
                  remark #15388: vectorization support: reference __1STRUCTVAR.r has aligned access
                  remark #15305: vectorization support: vector length 4
                  remark #15427: loop was completely unrolled
                  remark #15301: MATERIALIZED LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 4 
                  remark #15477: vector loop cost: 0.750 
                  remark #15478: estimated potential speedup: 5.330 
                  remark #15488: --- end vector loop cost summary ---
               LOOP END

               LOOP BEGIN at src/stencil_vector_code.hpp(114,8) inlined into src/stencil_outer_loops.hpp(70,5)
               <Peeled loop for vectorization>
                  remark #25436: completely unrolled by 4  
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at src/stencil_region_loops.hpp(41,3) inlined into src/stencil_outer_loops.hpp(70,5)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: realv::operator[](realv *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (realv::operator[](realv *, int)) src/realv.hpp(100,36)

===========================================================================

Begin optimization report for: realv::operator[](const realv *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (realv::operator[](const realv *, int) const) src/realv.hpp(103,48)

===========================================================================

Begin optimization report for: realv::loadFrom(realv *, const realv *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (realv::loadFrom(realv *, const realv *)) src/realv.hpp(203,45)

===========================================================================

Begin optimization report for: realv::storeTo(const realv *, realv *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (realv::storeTo(const realv *, realv *) const) src/realv.hpp(214,42)

===========================================================================

Begin optimization report for: RealMatrix4321<1L>::getPtr(const RealMatrix4321<1L> *, int, long, long, long, bool) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (RealMatrix4321<1L>::getPtr(const RealMatrix4321<1L> *, int, long, long, long, bool) const) src/real_matrix.hpp(62,100)

===========================================================================

Begin optimization report for: RealMatrix4321<1L>::readv(const RealMatrix4321<1L> *, int, long, long, long, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (RealMatrix4321<1L>::readv(const RealMatrix4321<1L> *, int, long, long, long, int) const) src/real_matrix.hpp(87,88)

===========================================================================

Begin optimization report for: Grid3d::readVec(const Grid3d *, long, long, long, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Grid3d::readVec(const Grid3d *, long, long, long, int) const) src/Grid.hpp(68,84)

===========================================================================

Begin optimization report for: RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (RealMatrix4321<11L>::getPtr(const RealMatrix4321<11L> *, int, long, long, long, bool) const) src/real_matrix.hpp(62,100)

===========================================================================

Begin optimization report for: RealMatrix4321<11L>::getPtr(RealMatrix4321<11L> *, int, long, long, long, bool)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (RealMatrix4321<11L>::getPtr(RealMatrix4321<11L> *, int, long, long, long, bool)) src/real_matrix.hpp(80,88)

===========================================================================

Begin optimization report for: RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (RealMatrix4321<11L>::readv(const RealMatrix4321<11L> *, int, long, long, long, int) const) src/real_matrix.hpp(87,88)

===========================================================================

Begin optimization report for: RealMatrix4321<11L>::writev(RealMatrix4321<11L> *, const realv &, int, long, long, long, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (RealMatrix4321<11L>::writev(RealMatrix4321<11L> *, const realv &, int, long, long, long, int)) src/real_matrix.hpp(114,98)

===========================================================================

Begin optimization report for: Grid5d::getData(Grid5d *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Grid5d::getData(Grid5d *)) src/Grid.hpp(109,28)

===========================================================================

Begin optimization report for: Grid5d::getMatIndex(const Grid5d *, int, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Grid5d::getMatIndex(const Grid5d *, int, int) const) src/Grid.hpp(115,57)

===========================================================================

Begin optimization report for: Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Grid5d::readVec(const Grid5d *, int, int, long, long, long, int) const) src/Grid.hpp(149,100)

===========================================================================

Begin optimization report for: Grid5d::writeVec(Grid5d *, const realv &, int, int, long, long, long, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (Grid5d::writeVec(Grid5d *, const realv &, int, int, long, long, long, int)) src/Grid.hpp(155,104)

===========================================================================

Begin optimization report for: std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::__less<int, int>::operator()(const std::__1::__less<int, int> *, const int &, const int &) const) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(702,59)

===========================================================================

Begin optimization report for: std::__1::min<int>(const int &, const int &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::min<int>(const int &, const int &)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2590,1)

===========================================================================

Begin optimization report for: std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__1::min<int, std::__1::__less<int, int>>(const int &, const int &, std::__1::__less<int, int>)) /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/algorithm(2582,1)

===========================================================================
